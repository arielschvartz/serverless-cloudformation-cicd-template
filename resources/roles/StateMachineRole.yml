Resources:
  StateMachineRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: ${self:custom.stateMachine.roleName}
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - states.amazonaws.com
            Action:
              - sts:AssumeRole
      Path: /

  StateMachineRolePolicy:
    Type: AWS::IAM::Policy
    Properties:
      Roles:
        - !Ref StateMachineRole
      PolicyName: ${self:custom.stateMachine.policyName}
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Action:
              - lambda:InvokeFunction
            Resource:
              # WORKFLOW
              - !GetAtt [OpenNewBranchLambdaFunction, Arn]
              - !GetAtt [DownloadAndSaveSourceLambdaFunction, Arn]
              - !GetAtt [MapPackagingVariablesLambdaFunction, Arn]
              - !GetAtt [DeleteCreatedBranchLambdaFunction, Arn]
              # - !GetAtt [NotifyManualValidationLambdaFunction, Arn]
              - !GetAtt [OpenPRLambdaFunction, Arn]
              - !GetAtt [SaveBackupLambdaFunction, Arn]
              - !GetAtt [NotifySuccessLambdaFunction, Arn]
              - !GetAtt [NotifyErrorLambdaFunction, Arn]
              - !GetAtt [NotifyFailToStepFunctionLambdaFunction, Arn]
              - !GetAtt [NotifySuccessToStepFunctionLambdaFunction, Arn]

              # DEPLOY
              - !GetAtt [CheckIfCFStackExistsLambdaFunction, Arn]
              - !GetAtt [CreateBaseTemplateLambdaFunction, Arn]
              - !GetAtt [IsStackReadyLambdaFunction, Arn]
              - !GetAtt [UpdateCFTemplateLambdaFunction, Arn]

              # DATABASE
              - !GetAtt [HasMigrationsChecksumChangedLambdaFunction, Arn]
              - !GetAtt [TakeRDSSnapshotLambdaFunction, Arn]
              - !GetAtt [IsSnapshotReadyLambdaFunction, Arn]

              # ROLLBACK
              - !GetAtt [RollbackDatabaseLambdaFunction, Arn]
              - !GetAtt [IsRollbackInstanceReadyLambdaFunction, Arn]
              - !GetAtt [UpdateDatabaseCNAMELambdaFunction, Arn]
              - !GetAtt [RenameOldDatabaseInstanceLambdaFunction, Arn]
              - !GetAtt [RenameNewDatabaseInstanceLambdaFunction, Arn]
              - !GetAtt [DeleteDBInstanceLambdaFunction, Arn]
              - !GetAtt [IsDatabaseInstanceDeletedLambdaFunction, Arn]
              - !GetAtt [DeleteDBSnapshotLambdaFunction, Arn]
          - Effect: Allow
            Action:
              - states:StartExecution
            Resource:
              - !Ref DeployStateMachine
              - !Ref RollbackDatabaseStateMachine
          - Effect: Allow
            Action:
              - codebuild:StartBuild
              - codebuild:StopBuild
              - codebuild:BatchGetBuilds
            Resource:
              # WORKFLOW
              - !GetAtt [ServerlessBuildProject, Arn]
              - !GetAtt [WebpackBuildProject, Arn]

              # DEPLOY
              - !GetAtt [DeployFunctionsProject, Arn]

              # DATABASE
              - !GetAtt [MigrateDatabaseProject, Arn]

              # S3
              - !GetAtt [SyncPackageToS3Project, Arn]
          - Effect: Allow
            Action:
              - events:PutTargets
              - events:PutRule
              - events:DescribeRule
            Resource:
              Fn::Join:
                - ':'
                - - 'arn:aws:events'
                  - !Ref AWS::Region
                  - !Ref AWS::AccountId
                  - rule/StepFunctionsGetEventForCodeBuildStartBuildRule

          # - Effect: Allow
          #   Action:
          #     # CODEBUILD SUPPORT
          #     - codebuild:BatchGetBuilds
          #     - codebuild:StartBuild

          #     # CLOUDFORMATION SUPPORT
          #     - cloudformation:GetTemplate
          #     - cloudformation:CreateStack
          #     - cloudformation:DeleteStack
          #     - cloudformation:DescribeStacks
          #     - cloudformation:ListStackResources
          #     - cloudformation:UpdateStack
          #     - cloudformation:CreateChangeSet
          #     - cloudformation:DeleteChangeSet
          #     - cloudformation:DescribeChangeSet
          #     - cloudformation:ExecuteChangeSet
          #     - cloudformation:SetStackPolicy
          #     - cloudformation:ValidateTemplate

          #     # ALL S3
          #     - s3:*

          #     # ALL PIPELINE
          #     - codepipeline:*
          #     - codepipeline:PutJobSuccessResult
          #     - codepipeline:PutJobFailureResult

          #     # IAM
          #     - iam:ListRoles
          #     - iam:PassRole

          #     # LAMBDA
          #     - lambda:InvokeFunction
          #   Resource: '*'
          # - Effect: Allow
          #   Action:
          #     - logs:CreateLogGroup
          #     - logs:CreateLogStream
          #     - logs:PutLogEvents
          #   Resource: arn:aws:logs:*:*:*
          # - Effect: Allow
          #   Action:
          #     - iam:PassRole
          #   Resource: '*'
          #   Condition:
          #     StringEqualsIfExists:
          #       iam:PassedToService:
          #         - cloudformation.amazonaws.com
          # - Effect: Allow
          #   Action:
          #     - s3:PutObject
          #     - s3:GetBucketPolicy
          #     - s3:GetObject
          #     - s3:ListBucket
          #     - s3:DeleteObject
          #   Resource:
          #     - arn:aws:s3:::${self:custom.bucket.package}
          #     - arn:aws:s3:::${self:custom.bucket.package}/*
          #     - arn:aws:s3:::${self:custom.bucket.source}
          #     - arn:aws:s3:::${self:custom.bucket.source}/*
          #     - arn:aws:s3:::${self:custom.bucket.cloudformationTemplatesBackup}
          #     - arn:aws:s3:::${self:custom.bucket.cloudformationTemplatesBackup}/*
          # - Effect: Allow
          #   Action:
          #     - kms:Decrypt
          #   Resource: !GetAtt [KMSKey, Arn]
          # - Effect: Allow
          #   Action:
          #     - sns:*
          #   Resource:
          #     - !Ref NotifyForValidationTopic
          #     - !Ref OpenPullRequestTopic
          # - Effect: Allow
          #   Action:
          #     - sts:AssumeRole
          #   Resource:
          #     - ${self:custom.qa.roleArn}
          #     - ${self:custom.qa.cloudformation.roleArn}
