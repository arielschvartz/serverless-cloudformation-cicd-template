Resources:
  PipelineRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: ${self:custom.pipeline.roleName}
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - codepipeline.amazonaws.com
                - codebuild.amazonaws.com
            Action:
              - sts:AssumeRole
      Path: /

  PipelineRolePolicy:
    DependsOn:
      - NotifyForValidationTopic
      - OpenPullRequestTopic
    Type: AWS::IAM::Policy
    Properties:
      Roles:
        - !Ref PipelineRole
      PolicyName: ${self:custom.pipeline.policyName}
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Action:
              # CODEBUILD SUPPORT
              - codebuild:BatchGetBuilds
              - codebuild:StartBuild

              # CLOUDFORMATION SUPPORT
              - cloudformation:GetTemplate
              - cloudformation:CreateStack
              - cloudformation:DeleteStack
              - cloudformation:DescribeStacks
              - cloudformation:ListStackResources
              - cloudformation:UpdateStack
              - cloudformation:CreateChangeSet
              - cloudformation:DeleteChangeSet
              - cloudformation:DescribeChangeSet
              - cloudformation:ExecuteChangeSet
              - cloudformation:SetStackPolicy
              - cloudformation:ValidateTemplate

              # ALL S3
              - s3:*

              # ALL PIPELINE
              - codepipeline:*
              - codepipeline:PutJobSuccessResult
              - codepipeline:PutJobFailureResult

              # IAM
              - iam:ListRoles
              - iam:PassRole

              # LAMBDA
              - lambda:InvokeFunction
            Resource: '*'
          - Effect: Allow
            Action:
              - logs:CreateLogGroup
              - logs:CreateLogStream
              - logs:PutLogEvents
            Resource: arn:aws:logs:*:*:*
          - Effect: Allow
            Action:
              - iam:PassRole
            Resource: '*'
            Condition:
              StringEqualsIfExists:
                iam:PassedToService:
                  - cloudformation.amazonaws.com
          - Effect: Allow
            Action:
              - s3:PutObject
              - s3:GetBucketPolicy
              - s3:GetObject
              - s3:ListBucket
              - s3:DeleteObject
            Resource:
              - arn:aws:s3:::${self:custom.bucket.artifacts}
              - arn:aws:s3:::${self:custom.bucket.artifacts}/*
              - arn:aws:s3:::${self:custom.bucket.source}
              - arn:aws:s3:::${self:custom.bucket.source}/*
              - arn:aws:s3:::${self:custom.bucket.cloudformationTemplatesBackup}
              - arn:aws:s3:::${self:custom.bucket.cloudformationTemplatesBackup}/*
          - Effect: Allow
            Action:
              - kms:Decrypt
            Resource: !GetAtt [KMSKey, Arn]
          - Effect: Allow
            Action:
              - sns:*
            Resource:
              - !Ref NotifyForValidationTopic
              - !Ref OpenPullRequestTopic
          - Effect: Allow
            Action:
              - sts:AssumeRole
            Resource:
              - ${self:custom.qa.roleArn}
              - ${self:custom.qa.cloudformation.roleArn}
